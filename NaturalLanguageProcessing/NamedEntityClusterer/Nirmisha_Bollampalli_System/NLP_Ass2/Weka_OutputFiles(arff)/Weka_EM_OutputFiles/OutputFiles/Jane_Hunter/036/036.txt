A Comparison of Schemas for Dublin Core based Video Metadata Representation A Comparison of Schemas for Video Metadata Representation Jane Hunter CITEC Edward St Brisbane Qld Australia Phone Fax jane dstc edu au Liz Armstrong DSTC Level GP South Uni of Qld Qld Australia Phone Fax liz dstc edu au Abstract To enable the resource discovery of audiovisual documents over the WWW it will be necessary to define content description standards or metadata standards for complex multi layered time dependent information rich audiovisual data streams In particular this is the primary goal of the emerging MPEG standard the Multimedia Content Description Interface under development by the MPEG group In the past a lot of effort has gone into generating descriptors and description schemes for video indexing but comparatively little research has been done on schemas capable of defining the structure content and semantics of video documents and enabling validation and higher levels of automated content checking This paper compares the capabilities of the RDF Schema Extensible Markup Language XML Document Type Definitions DTD s Document Content Description DCD and Schema for Object Oriented XML SOX for supporting and validating hierarchical video descriptions based on Dublin Core MPEG and a specific hierarchical structure Finally this paper proposes a hybrid schema based on features from each of these schemas which will satisfy the MPEG Description Definition Language DDL requirements Keywords Video Metadata Schema Dublin Core MPEG Introduction To enable the resource discovery of audiovisual documents over the WWW it will be necessary to define content description standards or metadata standards for complex multi layered time dependent information rich data streams In particular this is the primary goal of the developing MPEG standard the Multimedia Content Description Interface under development by the MPEG group A number of papers have considered the application of Dublin Core DC and the Resource Description Framework RDF to video indexing An ex le of such an application is described briefly below However very little work has been done on defining schemas which are capable of actually validating and constraining video descriptions and their associated data models Such schemas will be necessary for the development of cost efficient user friendly semi automatic metadata generation and editing tools for video Such a schema would also provide a solution for the Description Definition Language DDL component of the MPEG requirements This paper first briefly presents a video description scheme based on Dublin Core and MPEG From this description format a list of schema requirements are generated It then compares the ability of a number of existing schemas and schema proposals including the RDF Schema XML DTDs DCD and SOX to satisfy descriptions of hierarchical video structures Ex les of schema definitions are given to illustrate their capabilities Finally this paper proposes a hybrid schema based on specific features from each of these schemas and schema proposals which would satisfy the MPEG Description Definition Language DDL requirements Proposed Video Description Scheme Dublin Core was designed specifically for generating metadata to facilitate the resource discovery of textual documents Although a number of workshops have been held to discuss the applicability of Dublin Core to non textual documents such as images sound and moving images they have primarily focused on extensions to the core elements through the use of subelements and schemes specific to audiovisual data to describe bibliographic type information rather than the actual content It has been shown that it is possible to describe both the structure and fine grained details of video content by using the fifteen Dublin Core elements plus qualifiers and encoding this within RDF This pure Dublin Core approach provides multiple levels of descriptive information At the top level the basic Dublin Core elements can be used to describe the bibliographic type information about the complete document e g Title Author Contributor Date etc This enables non specialist inter disciplinary searching independent of media type Extensions or qualifiers to specific DC elements Type Description Relation Coverage can be applied at the lower levels scenes shots frames to provide fine grained discipline and media specific searching e g Description Camera Angle The disadvantage of this approach is that the semantic refinement of Dublin Core through the use of qualifiers eventually leads to a loss of semantic interoperability The alternative is a hybrid approach in which RDF or some other framework is used to combine both simple unqualified Dublin Core and MPEG descriptors within a single description container Dublin Core can be used for generic media independent search and retrieval while MPEG can be used for object specific fine grained queries Our future research will compare and evaluate these two approaches for multimedia resource discovery and determine the best balance between semantic interoperability extensibility and modularity At this stage we don t know the specific attributes of each level we can only assume that each structural component will possess both a set of Dublin Core attributes plus a set of MPEG attributes as illustrated in Figure below For ex le if DC Type Image Moving TV News Scene then valid descriptors will include both the DC simple elements plus MPEG descriptors such as script transcript editlist keyframe etc If DC Type Image Moving TV News Scene Shot then valid descriptors will include both the DC elements plus keyframe camera_distance camera_angle camera_motion opening_transition closing_transition If DC Type Image Moving TV News Scene Shot Frame then a valid descriptors will be the DC elements plus colour_histogram Figure shows the logical structure the structural components and their associated Dublin Core attributes and some assumed MPEG attributes for the proposed video description scheme Figure Multilayered Hierarchical Structure and Attributes of Video Video Metadata Schema Requirements In order to represent the video structure and Dublin Core descriptors outlined in Figure a suitable schema must be able to support the following Hierarchical structure definitions The schema must be able to constrain the structure to a precise hierarchy in which complete video documents sit at the top level These in turn contain sequences which contain scenes which contain shots which contain frames which contain objects or actors Figure illustrates this hierarchy Each level or class within the hierarchy must be constrained to possess only specific attributes In our description scheme we assume that each layer possesses the simple optional and extensible DC elements plus a set of class specific attributes unique to that layer These represent the set of MPEG descriptors for that class when they become available Element and attribute inheritance It should be possible to specify sub classing with inheritance of attributes and elements from the upper to lower classes In addition sub classes should be able to have their own additional attributes and elements This allows efficient reuse and customization of document schemas Data Typing It must be possible to constrain the values of attributes to certain data types Data types supported should include primitive data types as well as Schemes e g SMPTE enumerated data types controlled vocabularies file types images URIs and complex data types e g colour histograms D vectors graphs RGB values etc It should also be possible to specify multiple alternative schemes or data types for a particular attribute Cardinality within attributes should be representable It must be possible to specify that an attribute can have zero one or multiple values Ideally the minimum and maximum number of attributes should also be specifiable e g a scene must contain between and shots Spatio temporal specifications The Schema must be able to support the specification of temporal characteristics e g begin and end time of segments and their duration Similarly it should be able to support spatial representation e g regions within an image or motion along a line Spatial temporal and conceptual relations Spatial relations such as neighbouring objects and temporal relations such as sequential or parallel segments should be supported Given such a relationship between two classes it should also be possible to constrain specific attribute values of these classes For ex le the start and end times of scenes contained within a sequence must lie within the start and end time of that sequence Human readability It is desirable rather than mandatory that both the schema and the description output from the schema should be human readable Availability of supporting technologies such as parsers capable of validating input descriptions databases and query languages These requirements are similar and compatible with the DDL requirements listed in section of the MPEG Requirements Document Resource Description Framework RDF Schema The Resource Description Framework RDF enables interoperability between applications which exchange machine understandable information on the Web A model for representing metadata as well as a syntax for encoding RDF based on XML has been defined in the RDF Model and Syntax Specification document RDF is based on a resource and property data model system A collection of classes typically authored for a specific purpose or domain and the definition of their properties attributes and corresponding semantics represent an RDF schema A schema defines not only the properties of the resource or class Title Author Subject Size Color etc but also may define the kinds of resources being described books webpages people companies etc The details of RDF schemas have been defined in the RDF Schema Specification document Classes are organized in a hierarchy and offer extensibility through subclass refinement This way in order to create a schema slightly different from an existing one one can just provide incremental modifications to the base schema Through the sharability of schemas RDF will support the reusability of metadata definitions Due to RDF s incremental extensibility agents processing metadata will be able to trace the origins of schemes they are unfamiliar with back to known schemes and perform meaningful actions on metadata they weren t originally designed to process The sharability and extensibility of RDF also allows metadata authors to use multiple inheritance to mix definitions to provide multiple views to their data taking advantage of work done by others The XML namespace mechanism serves to identify different RDF Schemas RDF schemas can be compared to XML Document Type Descriptions DTDs Unlike an XML DTD which gives specific constraints on the syntactical structure of a document an RDF schema provides semantical information about the interpretation of the statements given in an RDF data model Given its goals RDF appears to be the ideal approach for supporting descriptors from multiple description schemes simultaneously as required by the MPEG DDL Ex le of a Suitable RDF Schema This section describes an RDF schema definition that attempts to map to the diagram in Figure and support the requirements listed above Since we want the DC simple attributes to be applicable to every component or layer videos sequences scenes shots frames and objects are all sub classes of a top level document class which possesses the DC attributes In addition each sub class has its own additional descriptive properties or attributes which will correspond to MPEG descriptors when they become available lt rdf RDF xmlns rdf http www w org TR WD rdf syntax xmlns rdfs http www w org TR WD rdf schema xmlns dc http purl org metadata dublin_core gt lt rdfs Class ID MM_document gt lt rdfs comment gt Class for representing a generic multimedia document lt rdfs comment gt lt rdfs Class gt lt rdfs comment gt Define all of the DC elements for MM_document lt rdfs comment gt lt rdf PropertyType ID Title gt lt rdfs comment gt This is the DC Title element lt rdfs comment gt lt rdfs domain rdf resource MM_document gt lt rdfs range rdf resource http purl org metadata dublin_core Title gt lt rdf PropertyType gt lt rdf PropertyType ID Creator gt lt rdfs comment gt This is the DC Creator element lt rdfs comment gt lt rdfs domain rdf resource MM_document gt lt rdfs range rdf resource http purl org metadata dublin_core Creator gt lt rdf PropertyType gt etc lt rdfs Class ID Video gt lt rdfs comment gt Class for representing a video document It is a subclass of MM_document lt rdfs comment gt lt rdfs subClassOf rdf resource MM_document gt lt rdfs Class gt lt rdfs Class ID Sequence gt lt rdfs comment gt Class for representing a sequence from a video document It is a subclass of MM_document lt rdfs comment gt lt rdfs subClassOf rdf resource MM_document gt lt rdfs Class gt lt rdfs Class ID Scene gt lt rdfs comment gt Class for representing a scene It is a subclass of MM_document lt rdfs comment gt lt rdfs subClassOf rdf resource MM_document gt lt rdfs Class gt lt rdfs Class ID Shot gt lt rdfs comment gt Class representing a shot lt rdfs comment gt lt rdfs subClassOf rdf resource MM_document gt lt rdfs Class gt lt rdfs Class ID Frame gt lt rdfs comment gt Represents a single frame It is a subclass of MM_document lt rdfs comment gt lt rdfs subClassOf rdf resource MM_document gt lt rdfs Class gt lt rdfs Class ID Object gt lt rdfs comment gt Represents an object within a frame It is a subclass of MM_document lt rdfs comment gt lt rdfs subClassOf rdf resource MM_document gt lt rdfs Class gt One of the problems with RDF is to create a generic property such as contains by which the hierarchical structure can be defined i e videos contain sequences which contain shots which contain frames which contain objects and actors If you create a property contains for video then how do you also apply it to sequence scene and shot Since each property requires a single range then generic relationships such as contains cannot be used Instead a separate property must be defined for each domain range pair This is tedious and repetitive The lack of class specific constraints on domain and range of properties is a major limitation of RDF particularly when applied to complex multilayered documents in which you want to specify constraints on structural spatial temporal and conceptual relationships between components lt rdf PropertyType ID contains_sequences gt lt rdfs comment gt Property related to a video asset stating that a video consists of a number of sequences lt rdfs comment gt lt rdfs domain rdf resource Video gt lt rdfs range rdf resource Sequence gt lt rdfs PropertyType gt lt rdf PropertyType ID contains_scenes gt lt rdfs comment gt Property related to a sequence asset stating that a sequnce consists of a number of scenes lt rdfs comment gt lt rdfs domain rdf resource Sequence gt lt rdfs range rdf resource Scene gt lt rdfs PropertyType gt lt rdf PropertyType ID contains_shots gt lt rdfs comment gt Property related to a scene asset stating that a scene consists of a number of shots lt rdfs comment gt lt rdfs domain rdf resource Scene gt lt rdfs range rdf resource Shot gt lt rdfs PropertyType gt lt rdf PropertyType ID contains_frames gt lt rdfs comment gt Property related to a shot asset stating that a shot consists of a number of frames lt rdfs comment gt lt rdfs domain rdf resource Shot gt lt rdfs range rdf resource Frame gt lt rdfs PropertyType gt lt rdf PropertyType ID contains_objects gt lt rdfs comment gt Property related to a frame asset stating that a frame consists of a number of objects lt rdfs comment gt lt rdfs domain rdf resource Frame gt lt rdfs range rdf resource Object gt lt rdfs PropertyType gt Another problem is the limited data typing within RDF There are three ways of specifying data types within RDF Use the primitive Literal data type available within the RDF schema definition This is any ed string Implement a kind of enumerated data type by defining the range to be a class with a number of predefined instance values This is used in the ex le below to define the possible values for shot transitions Point to a separate namespace in which the data types have been defined In the ex le below we refer to http www w org TR datatypes for any data types other than literal This namespace doesn t currently exist but it is intended to define this within the W C XML Schema Working Group which has recently been set up Below is an ex le of the RDF Schema code defining some of the scene shot frame and object properties It illustrates the three data typing methods available lt rdf PropertyType ID startTime gt lt rdfs domain rdf resource Scene gt lt rdfs domain rdf resource Shot gt lt rdfs range rdf resource http wwww w org TR datatypes Time gt lt rdf PropertyType gt lt rdfs PropertyType ID keyFrame gt lt rdfs domain rdf resource Scene gt lt rdfs domain rdf resource Shot gt lt rdfs range rdf resource http www w org TR datatypes Image gt lt rdfs PropertyType gt lt rdfs PropertyType ID openTrans gt lt rdfs domain rdf resource Shot gt lt rdfs range rdf resource Transitions gt lt rdfs PropertyType gt lt rdfs PropertyType ID closeTrans gt lt rdfs domain rdf resource Shot gt lt rdfs range rdf resource Transitions gt lt rdfs PropertyType gt lt rdfs Class ID Transitions gt lt Transitions ID Cut gt lt Transitions ID Fade gt lt Transitions ID Wipe gt lt Transitions ID Dissolve gt lt rdfs PropertyType ID position gt lt rdfs domain rdf resource Object gt lt rdfs range rdf resource http www w org TR datatypes Point gt lt rdfs PropertyType gt lt rdfs PropertyType ID shape gt lt rdfs domain rdf resource Object gt lt rdfs range rdf resource http www w org TR datatypes Polygon gt lt rdfs PropertyType gt lt rdfs PropertyType ID colorHistogram gt lt rdfs domain rdf resource Frame gt lt rdfs domain rdf resource Object gt lt rdfs range rdf resource http www w org TR datatypes Histogram gt lt rdfs PropertyType gt Advantages of the RDF Schema for Video Metadata RDF Schemas within the context of this application have the following advantages RDF Schema is able to provide meanings to elements or semantic structure not possible using purely syntactic schemas such as XML DTDs However the sorts of machine understandable meanings provided in the current version of RDF Schema is very limited so the advantage of semantic validation is virtually negligible The other schemas really only provide implicit child or contains relationships between elements With RDF you can specify any relationship types explicitly through properties but this is limited by the need to specify a single range It isn t possible to constrain a particular relationship to multiple range domain pairs e g sequences can only contains scenes which can only contain shots etc Multiple namespaces This enables the same feature to have different descriptors which correspond to different domains or description schemes The ability to mix classification vocabularies within one XML based encoding allows video authors or others to deliver richer domain specific content descriptions thus increasing the re usability of the video on the Web This is a key requirement of the MPEG DDL Inheritance is supported through sub classes and sub properties This provides easy extensibility and reuse of code A simple RDF parser SiRPAC exists but it has limited validation capabilities checking only that the domain and range constraints are satisfied It is human readable simple to understand and thus simple to extend or customize Limitations of the RDF Schema for Video Metadata RDF Schema has the following problems or limitations Unstable The RDF Schema specifications are still under development and change frequently Limited or no data typing Almost all data typing will need to be provided by external namespaces which don t yet exist No cardinality It isn t possible to specify optional zero or multiple values for an attribute Range constraints such as minimum and maximum values are not supported Class specific range constraints are not possible Only one range is possible for a given property The only way to do provide multiple ranges is to create multiple properties e g secs_start_time frame_start_time SMPTE_start_time RDF Schema can t describe multilayered structures using a single generic contains property This requires multiple specific contains properties i e contains_sequences contains_scenes contains_shots contains_frames The alternative is to implement code outside of the schema which understands DC Relation HasParts semantics and can perform the validation Property centricity makes readability difficult The link between properties and classes is defined within the property definitions not the class definitions No query language exists for RDF Given a video structure to find videos with similar structures you need to be able to store RDF structures in a directed graph with associated attribute values in a database The simplest way to specify spatial and temporal relationships is via the Collection elements Seq Bag and Alt but these provide limited semantics Since no lt Par gt element exists within RDF the lt Bag gt element must be used to specify parallelism For spatial relationships such as neighbours if the list of neighbours is in a collection can we assume that the first one is the nearest neighbour Cannot map relationship type properties between classes to constraints on the attribute values of the classes involved For ex le if two scenes abutt then their respective end and start frame numbers must be consecutive If a sequence contains a scene then the start and end times of the scene must lie within the start and end times of the sequence This is not supported by RDF Schema RDF Schema is an incomplete mapping of the RDF Syntax and Data model There are very useful features available within the RDF Syntax and Data Model Spec which aren t supported in the RDF Schema XML DTDs Extensible Markup Language XML Document Type Definitions DTDs provide a subset of SGML for describing documents XML was developed by the XML Working Group under the World Wide Web Consortium W C in The complete XML spec is available from the W C Each XML document has both a logical and a physical structure Physically the document is composed of units called entities An entity may refer to other entities to cause their inclusion in the document A document begins in a root or document entity Logically the document is composed of declarations elements comments character references and processing instructions all of which are indicated in the document by explicit markup The logical and physical structures must nest properly The function of the markup in an XML document is to describe its storage and logical structure and to associate attribute value pairs with its logical structures XML provides the document type declaration to define constraints on the logical structure and to support the use of predefined storage units An XML document is valid if it has an associated document type declaration and if the document complies with the constraints expressed in it Document type declarations are made in a Document Type Definition DTD file The DTD file then contains a formal definition of a particular type of document outlining the element names and the structure of the document An Ex le of an XML DTD for Video Documents The structure is defined in the element definitions at the top of the DTD Each element has a set of associated attributes All elements have an ID attribute plus the DC attributes In addition sequences scenes and shots also have a set of time attributes begin end duration Each element also has its own set of level specific attributes which will correspond to the MPEG descriptors when they become available lt xml version gt lt DOCTYPE videodoc lt hierarchical structure of videodoc gt lt ELEMENT videodoc sequence gt lt ELEMENT sequence scene gt lt ELEMENT scene shot gt lt ELEMENT shot frame gt lt ELEMENT frame object gt lt ELEMENT object object gt lt ID attribute for every element gt lt ENTITY id_attr id ID IMPLIED gt lt Set of Dublin Core Attributes gt lt ENTITY dc_attr Title CDATA IMPLIED Creator CDATA IMPLIED Subject CDATA IMPLIED Description CDATA IMPLIED Publisher CDATA IMPLIED Contributor CDATA IMPLIED Date CDATA IMPLIED Type CDATA IMPLIED Format CDATA IMPLIED Identifier CDATA IMPLIED Source CDATA IMPLIED Language CDATA IMPLIED Relation CDATA IMPLIED Coverage CDATA IMPLIED Rights CDATA IMPLIED gt lt ENTITY scene_attr Transcript CDATA IMPLIED Script CDATA IMPLIED EditList CDATA IMPLIED Keyframe CDATA IMPLIED Locale CDATA IMPLIED Cast CDATA IMPLIED Objects CDATA IMPLIED gt lt ENTITY shot_attr Keyframe CDATA IMPLIED CameraDist NMTOKEN IMPLIED CameraAngle NMTOKEN IMPLIED CameraMotion NMTOKEN IMPLIED Lighting NMTOKEN IMPLIED OpenTrans NMTOKEN IMPLIED CloseTrans NMTOKEN IMPLIED gt lt ENTITY frame_attr Image CDATA IMPLIED Timest CDATA IMPLIED ColourText NMTOKEN IMPLIED ColourHistogram CDATA IMPLIED Texture CDATA IMPLIED Annotation CDATA IMPLIED Anno_Position CDATA IMPLIED gt lt ENTITY object_attr Position CDATA IMPLIED Shape CDATA IMPLIED Trajectory CDATA IMPLIED Speed CDATA IMPLIED ColourText NMTOKEN IMPLIED ColourHistogram CDATA IMPLIED Texture CDATA IMPLIED Volume CDATA IMPLIED Annotation CDATA IMPLIED Anno_Position CDATA IMPLIED gt lt ENTITY time_attr begin CDATA IMPLIED end CDATA IMPLIED dur CDATA IMPLIED gt lt ATTLIST videodoc id_attr dc_attr gt lt ATTLIST sequence id_attr dc_attr time_attr gt lt ATTLIST scene id_attr dc_attr scene_attr time_attr gt lt ATTLIST shot id_attr dc_attr shot_attr time_attr gt lt ATTLIST frame id_attr dc_attr frame_attr gt lt ATTLIST object id_attr dc_attr object_attr gt gt Advantages of XML DTDs for Video Metadata Work is progressing on a query languages for XML e g XML QL XML parsers exist Simplicity associated with a single namespace Users only have to understand one namespace XML is simpler than SGML HyTime etc XML DTDs are easy to read and understand Short and sweet without all that data typing Hierarchical structures are supported but only on a syntactical basis Disadvantages of XML DTDs for Video Metadata No name spaces Since name spaces are not supported definitions such as Dublin Core attributes will need to be redefined unless external entities are used External entities provide a similar capability to namespaces An external entity can be retrieved from an external DTD via a URI to this DTD and the entity s ID Cardinality of attributes is zero or one in XML DTDs This creates problems with DC attributes which are optional and repeatable They may need to be declared as elements There is very limited support for data typing Only three kinds of attribute types are supported a string type a set of tokenized types and enumerated types However Bray has shown that it is possible to attach strong type declarations to XML elements using reserved attributes It is a purely syntactic machine understandable schema which can t provide any of the semantics associated with complex structured multimedia data or support object oriented data modelling concepts There is no inheritance There are no relationships possible other than the implicit contains Document Content Description DCD for XML The Document Content Description DCD facility for XML is an RDF vocabulary designed for describing constraints to be applied to the structure and content of XML documents It consists of a set of properties used to constrain the types of elements and names of attributes that may appear in an XML document the contents of the elements and the values of the attributes It was designed to provide semantics over and above the purely syntactical XML DTDs It was also designed to be conformant with the RDF Model and Syntax Specification with some simplifications DCD also incorporates a subset of an earlier submission to W C the XML Data Submission The introduction to the XML Data Submission says that it describes an XML vocabulary for schemas that is for defining and documenting object classes It can be used for classes which are strictly syntactic for ex le XML or those which indicate concepts and relations among concepts as used in relational databases KR graphs and RDF The former are called syntactic schemas the latter conceptual schemas Thus XML Data and DCD add object oriented and data modelling concepts such as class inheritance to purely syntactic schemas such as XML DTDs DCD Schemas are based on elements and attributes Elements correspond to RDF property types DCD declarations constrain the content and attributes of elements in document instances by assigning properties to objects of type ElementDef and AttributeDef Ex le of a DCD Schema The DCD Schema below is based on the following assumptions The Dublin Core elements are all described in a separate name space The root element video_doc contains video_sequences which contains video_scenes etc The Dublin Core elements apply to every level In addition the sequence scene and shot elements possess start_time end_time and duration elements In addition each level has its own unique elements attributes corresponding to MPEG descriptors lt DCD xmlns DC http purl org metadata dublin_core xmlns CDT http www w org TR complex_datatypes gt lt DCD syntax explicit gt lt Description gt Ex le of a Video Document DCD lt Description gt lt Namespace gt http www dstc edu au schemas videodcd lt Namespace gt lt ElementDef Type videodoc Model Elements Root True gt lt Description gt A video document structure lt Description gt lt Group RDF Order Seq gt lt Element gt dc_values lt Element gt lt Group Occurs ZeroOrMore RDF Order Seq gt lt Element gt sequence lt Element gt lt Group gt lt ElementDef gt lt ElementDef Type sequence Model Elements gt lt Description gt Description of a video sequence element lt Description gt lt AttributeDef Name seqID Occurs Required gt lt Group RDF Order Seq gt lt Element gt dc_values lt Element gt lt Element gt time_attribs lt Element gt lt Group Occurs ZeroOrMore RDF Order Seq gt lt Element gt scene lt Element gt lt Group gt lt Group gt lt ElementDef gt lt ElementDef Type scene Model Elements gt lt Description gt Description of a video scene element lt Description gt lt AttributeDef Name sceneID Occurs Required gt lt Group RDF Order Seq gt lt Element gt dc_values lt Element gt lt Element gt time_attribs lt Element gt lt Element gt transcript lt Element gt lt Element gt keyframe lt Element gt lt Group Occurs ZeroOrMore RDF Order Seq gt lt Element gt shot lt Element gt lt Group gt lt Group gt lt ElementDef gt lt ElementDef Type shot Model Elements gt lt Description gt Description of a video shot element lt Description gt lt AttributeDef Name shotID Occurs Required gt lt Group RDF Order Seq gt lt Element gt dc_values lt Element gt lt Element gt time_attribs lt Element gt lt Element gt camera_distance lt Element gt lt Element gt camera_angle lt Element gt lt Element gt camera_motion lt Element gt lt Element gt lighting lt Element gt lt Element gt open_transition lt Element gt lt Element gt close_transition lt Element gt lt Group Occurs ZeroOrMore RDF Order Seq gt lt Element gt frame lt Element gt lt Group gt lt Group gt lt ElementDef gt lt ElementDef Type frame Model Elements gt lt Description gt Description of a video frame element lt Description gt lt AttributeDef Name frameID Occurs Required gt lt Group RDF Order Seq gt lt Element gt dc_values lt Element gt lt Element gt timest lt Element gt lt Element gt CDT colourhistogram lt Element gt lt Element gt CDT texture lt Element gt lt Element gt annotation lt Element gt lt Element gt CDT anno_position lt Element gt lt Group Occurs ZeroOrMore RDF Order Seq gt lt Element gt object lt Element gt lt Group gt lt Group gt lt ElementDef gt lt ElementDef Type object Model Elements gt lt Description gt Description of a video object actor element lt Description gt lt AttributeDef Name objectID Occurs Required gt lt Group RDF Order Seq gt lt Element gt dc_values lt Element gt lt Element gt CDT position lt Element gt lt Element gt CDT shape lt Element gt lt Element gt CDT colourhistogram lt Element gt lt Element gt CDT texture lt Element gt lt Element gt CDT trajectory lt Element gt lt Element gt annotation lt Element gt lt Element gt CDT anno_position lt Element gt lt Group Occurs ZeroOrMore RDF Order Seq gt lt Element gt object lt Element gt lt Group gt lt Group gt lt ElementDef gt lt ElementDef Type dc_values Model Elements gt lt Description gt List of Dublin Core Elements lt Description gt lt Group RDF Order Seq gt lt Element gt DC Title lt Element gt lt Element gt DC Creator lt Element gt lt Element gt DC Subject lt Element gt lt Group gt lt ElementDef gt lt ElementDef Type time_attribs Model Elements gt lt Group RDF Order Seq gt lt Element gt start_time lt Element gt lt Element gt end_time lt Element gt lt Element gt duration lt Element gt lt Group gt lt ElementDef gt lt ElementDef Type transcript Model Data Datatype string gt lt ElementDef gt lt ElementDef Type keyframe Model Data Datatype uri gt lt ElementDef gt lt ElementDef Type camera_distance Model Data Datatype enumeration gt lt Values gt close up medium shot long shot lt Values gt lt ElementDef gt lt ElementDef Type camera_angle Model Data Datatype enumeration gt lt Values gt low eye level high lt Values gt lt ElementDef gt lt ElementDef Type open_transition Model Data Datatype enumeration gt lt Values gt cut fade wipe dissolve lt Values gt lt ElementDef gt lt ElementDef Type annotation Model Data Datatype string gt lt ElementDef gt lt DCD gt Advantages of DCD for Video Metadata Human readable and simple Provides better data typing than RDF Schemas and XML DTDs but still only basic Also provides upper and lower bound constraints on attribute values Provides cardinality Supports multiple namespaces As an RDF vocabulary it inherits the advantages of the data modelling concepts in RDF plus constructs such as RDF Seq and RDF Alt Disadvantages of DCD for Video Metadata Currently no subclassing or inheritance but this is planned for the future The proposal is to create subclasses from existing elements through an extends property Only basic data typing is supported not complex data types There is no support for multiple alternate data types except if you create alternate elements with different data types e g start_time value can be SMPTE secs frames int Also there is no support for constraining the values of certain attributes of related elements Doesn t support data types such as points lines polygons colour histograms etc These would all have to be described in a separate namespace e g http www w org TR complex_datatypes It is not possible to specify that just the element s datatype is to be a value from another namespace You need to specify that the element itself is totally described in another namespace Only Seq and or Alt Groups are available Bag is not a legal value for the RDF Order property Seq is fine for specifying sequential components but for multimedia there is also a need to support groups of elements which run in parallel The RDF Bag element is the most suitable for specifying this in the absence of any Par value but it isn t supported in DCD Schema for Object Oriented XML SOX Schema for Object Oriented XML SOX provides a facility for defining the structure content and semantics of XML documents to enable XML validation and automated content checking SOX provides an alternative to XML DTDs for modeling markup relationships The introduction to the SOX specification says that it provides the following advantages over XML DTDs More efficient software development processes for distributed applications Basic intrinsic datatypes An extensible datatyping mechanism Content model and attribute interface inheritance A powerful namespace mechanism Embedded documentation SOX supports three varieties of datatypes scalar datatypes enumerated datatypes and format datatypes Scalar datatypes are derived from the basic number datatype and support specification of the number of digits and decimal places minimum and maximum value range and a mask An enumerated datatype may be derived from any of the intrinsic datatypes and may specify an enumeration of valid values A format datatype may be derived from any of the intrinsic datatypes and must specify a mask In SOX element types may inherit their content models and attribute definitions directly from another named element type An element type may also inherit and extend an attribute list Specialization of attribute definitions allows refinement and restriction of attribute datatype enumeration list and default value Additionally an attribute value may be defined to be inherited from the identically named attribute on a parent or older ancestor element Thus for ex le namespaces can be inherited from superordinate elements The SOX namespace facility enables Objects from any identifiable namespace to be used in building a SOX document That is any element attribute datatype enumeration entity interface notation parameter or processing instruction may be imported from any namespace A SOX document is a valid XML document according to the SOX DTD The schema designer is free to employ the same XML tools used for traditional XML documents This means that a SOX document can processed by a validating XML parser formatted according to an XSL stylesheet and managed by any DOM compliant or SAX compliant application SOX Ex le In this ex le the structural elements video_doc video_sequence video_scene video_shot video_frame and video_object are declared first They each possess the DC attributes plus their own specific elements and attributes lt schema name video_doc namespace http www dstc edu au schemas video_doc xml gt lt h gt Video Metadata Document lt h gt lt h gt Imported namespaces lt h gt lt namespace name dc namespace http purl org metadata dublin_core gt lt namespace name dcq namespace http purl org metadata dublin_core_qualifiers gt lt h gt Structural Elements lt h gt lt elementtype name video_doc gt lt model gt lt sequence gt lt element name dc_attributes gt lt element name video_sequence occurs gt lt sequence gt lt model gt lt elementtype gt lt elementtype name video_sequence gt lt model gt lt sequence gt lt element name seqID gt lt element name dc_attributes gt lt element name time_attributes gt lt element name video_scene occurs gt lt sequence gt lt model gt lt elementtype gt lt elementtype name video_scene gt lt model gt lt sequence gt lt element name sceneID gt lt element name dc_attributes gt lt element name time_attributes gt lt element name transcript gt lt element name key_frame gt lt element name video_shot occurs gt lt sequence gt lt model gt lt elementtype gt lt elementtype name video_shot gt lt model gt lt sequence gt lt element name shotID gt lt element name dc_attributes gt lt element name time_attributes gt lt element name camera_distance gt lt element name camera_angle gt lt element name camera_motion gt lt element name lighting gt lt element name open_trans gt lt element name close_trans gt lt element name video_frame occurs gt lt sequence gt lt model gt lt elementtype gt lt elementtype name video_frame gt lt model gt lt sequence gt lt element name frameID gt lt element name dc_attributes gt lt element name timest gt lt element name colour_histogram gt lt element name texture gt lt element name video_object occurs gt lt sequence gt lt model gt lt elementtype gt lt elementtype name video_object gt lt model gt lt sequence gt lt element name objectID gt lt element name dc_attributes gt lt element name position gt lt element name shape gt lt element name colour gt lt element name texture gt lt element name anno_text gt lt element name anno_posn gt lt element name video_object occurs gt lt sequence gt lt model gt lt elementtype gt The next step is to break down the elements to sub elements and eventually data types SOX supports both intrinsic basic datatypes as well as user defined scalar enumeration and formatted datatypes derived from the intrinsic datatypes The code below illustrates some of the capabilities of SOX data typing for video description lt h gt Attribute Elements lt h gt lt elementtype name dc_attributes gt lt model gt lt sequence gt lt element namespace dc name Title gt lt element namespace dc name Creator gt lt element namespace dc name Subject gt lt sequence gt lt model gt lt elementtype gt lt elementtype name time_attributes gt lt model gt lt sequence gt lt element name start_time gt lt element name end_time gt lt element name duration gt lt sequence gt lt model gt lt elementtype gt lt elementtype name start_time gt lt instanceof name time_val gt lt elementtype gt lt elementtype name end_time gt lt instanceof name time_val gt lt elementtype gt lt elementtype name duration gt lt instanceof name time_val gt lt elementtype gt lt elementtype name time_val gt lt model gt lt choice occurs gt lt element name frame_num gt lt element name SMPTE gt lt element name abs_time gt lt choice gt lt model gt lt elementtype gt lt elementtype name frame_num gt lt model gt lt string datatype frame gt lt model gt lt elementtype gt lt datatype name frame gt lt scalar datatype int min max gt lt datatype gt lt elementtype name smpte gt lt model gt lt string gt lt mask gt lt mask gt lt string gt lt model gt lt elementtype gt lt elementtype name abs_time gt lt model gt lt string datatype time gt lt model gt lt elementtype gt lt elementtype name key_frame gt lt model gt lt string datatype URI gt lt model gt lt elementtype gt lt elementtype name camera_dist gt lt model gt lt string datatype camera_distances gt lt model gt lt elementtype gt lt datatype name camera_distances gt lt enumeration datatype nmtoken gt lt option gt close up lt option gt lt option gt medium shot lt option gt lt option gt long shot lt option gt lt enumeration gt lt datatype gt lt schema gt Advantages of SOX for Video Metadata XML query languages when available will work on SOX documents XML parsers will work on SOX documents In order to perform complete validation of SOX specific constraints extra parsing code will be required Provides much better data typing capabilities than the other schemas scalar enumerated and formatted data types SOX provides the best cardinality with occurs n m Inheritance provides the possibility for reuse of code elements and datatype definitions Elements can inherit their definitions from existing elements using instanceof and also extend with new attributes using extends Disadvantages of SOX for Video Metadata SOX was designed for validating business documents in e commerce applications Consequently it is more suitable for validating static forms than complex multimedia structures It is element focussed rather than entity focussed It only provides the implicit contains relationship Structural constraints would require multiple contains elements Inheritance is possible but users can only extend elements with new attributes Ideally one should be able to extend elements with both new attributes and new elements Not an RDF vocabulary Conclusions the Ultimate Schema None of the above schemas is ideal for describing complex multimedia documents They all satisfy some of the requirements but fall down in other areas None of them is designed for describing complex hierachical structures in which there are spatial temporal structural and conceptual relationships between the components and where these relationships map to constraints on the relative attribute values of the related components For ex le spatial relationships such as neighbours in front of behind overlapping and surrounds correspond to certain constraints on the values of the shape location or volume attributes of the related objects Similarly temporal relationships such as contains sequential parallel and overlapping should be mapped to constraints on the start time end time and duration of the components None of the schemas support these capabilities RDF Schema claims to differ from the other schemas in that it is not a syntactic schema but a semantic schema However the sorts of machine understandable meanings provided in the current version of RDF Schema is very limited So the advantage of semantic validation is negligible RDF Schema is good at containing and combining descriptors from different name spaces communities but it has virtually no data typing Data types must be defined in a separate name space This has yet to be done but the work is intended to be done within the W C XML Schema Working Group which has recently been set up RDF Schemas also don t easily support multi layered hierarchical structures because of the inability to specify generic relationship types using properties and to apply these across multiple domain range pairs So although RDF is better than the other schemas because of its ability to specify relationships other than the implicit child or contains relationship which is the only one that the other schemas offer this facility is limited to a specific range and domain due to the lack of class specific constraints XML DTDs offer simplicity and fast cost effective development due to the ready availability of parsers tools and applications However as a data modelling language they have limited semantics which XML Data DCD and SOX schemas try to expand by adding things such as strong data typing and lexical constraints DCD is an improvement on XML DTDs because it provides better data typing and also provides additional semantics via its RDF conformity However it doesn t currently support inheritance although this is a future goal SOX has the best data typing It is also XML compliant so that XML parsers and XML QL when it becomes available will work on it It supports inheritance but with attribute extension only not element extension It is not RDF conformant SOX also provides the best cardinality enabling the minimum other than or and maximum number of children of an element to be specified e g maximum of shots per scene DCD and XML DTDs can only specify zero or more or one or more children RDF Schema doesn t support cardinality An additional desirable schema feature would be the ability to define equivalence relationships between attributes and define constraints based on these relationships For ex le suppose there are two attributes ColourText and ColourHistogram Then in an ideal schema users would be able to define an enumerated data type for ColourText red yellow green blue etc and for each of these possible values a correponding permissable range of ColourHistograms would be defined An even more complex ex le is the mapping of a textual description attribute to some combination of shape colour and texture attribute value ranges Such a schema could then be used to both validate the integrity of the input data but also automatically generate metadata where it is not provided This ability to map from high level features such as text to low level features colour shape texture is one of the requirements of the MPEG DDL It would also greatly improve the searchability of complex multimedia archives None of the schemas examined provide such sophisticated capabilities Other relevant schemas not covered in this paper include the XSchema specification and XML Data XSchema is very similar to SOX Formerly known as XSD XSchema began as a proposal for the representation of XML DTDs as XML documents The advantages of using XML document syntax to describe XML document structures include the ability to browse and edit XSchemas using XML aware tools This can t be done on DTDs which are not pure XML documents Although XML Data has some very useful features it appears to have been superseded by DCD The Ideal Schema for Multimedia Based on the above analysis and comparisons the best solution for video metadata representation is one which provides the object oriented semantical concepts of RDF but expresses them within an easily understood human readable XML schema We have proposed such a XML schema for the MPEG DDL which provides the following features The semantics and object oriented concepts of inheritance provided by RDF through classes sub classes properties and sub properties The extensible data typing capabilities of SOX The addition of a relation entity which allows spatial temporal structural and conceptual relations to be defined between classes and constraints on the domain range and property values to be specified The XML namespace facility Cardinality Temporal and spatial controls and specifications Linking mechanisms which enable links between descriptions and between content and descriptions The two major problems associated with this proposal are that it constitutes yet another schema or language and there are likely to be quite complex extensions necessary to the basic XML parser in order to perform complete validation of all of the constraints The W C XML Schema Working Group is looking at a XML based schema language which provides support for data typing and structural constraints currently lacking in XML DTDs Their charter includes delivering a recommendation on the best combination of DCD XML Data SOX and RDF for validating document syntax Based on the XML Schema Requirements document there is a very real possibility that the schema which they develop will satisfy the majority of the MPEG DDL requirements Acknowledgements The authors wish to acknowledge that this work was carried out within the Cooperative Research Centre for Research Data Networks established under the Australian Government s Cooperative Research Centre CRC Program and acknowledge the support of CITEC and the Distributed Systems Technology CRC under which the work described in this paper is administered References MPEG the Multimedia Content Description Interface Hunter J Iannella R The Application of Metadata Standards to Video Indexing Second European Conference on Research and Advanced Technology for Digital Libraries Crete Greece September Gonno Y Nishio F Haraoka K Yamagishi Y Metadata Structuring of Audiovisual Data Streams on MPEG System Metastructures Montreal Canada August Nishio F Gonno Y Haraoka K Yamagishi Y Transporting RDF Metadata Associated with Structured Contents Metastructures Montreal Canada August Bhat D On Representing Video Structure Using RDF Doc ISO IEC JTC SC WG MPEG M MPEG Atlantic City Meeting October Dublin Core Home Page MPEG Requirements Document V Doc ISO IEC JTC SC WG MPEG N MPEG Atlantic City Meeting October Resource Description Framework RDF Model and Syntax Specification REC rdf syntax W C Recommendation February Resource Description Framework RDF Schema Specification WD rdf schema W C Working Draft February XML Schema Working Group Saarela J SiRPAC Simple RDF Parser and Compiler February Extensible Markup Language XML REC xml W C Recommendation February Deutsch A Fernandez M Florescu D Levy A Suciu D XML QL A Query Language for XML Submission to W C August Bray T Adding Strong Data Typing to SGML and XML May Document Content Description for XML Submission to W C July XML Data W C Note January Schema for Object Oriented XML SOX NOTE SOX Submission to W C September XSchema Specification Version November Hunter J A Proposal for an MPEG Description Definition Language P MPEG Test and Evaluation AHG Meeting Lancaster February XML Schema Requirements NOTE xml schema req W C Note February Vitae Jane Hunter is a Senior Research Scientist within the Resource Discovery Unit at DSTC investigating international metadata standards and schemas for multimedia resources She has extensive experience in multimedia indexing through the development of applications using IBM s Digital Library and the DSTC s SuperNOVA project She is currently involved in the development of the MPEG Definition Description Language and is also an active participant within the Dublin Core and RDF standards communities She received a PhD in Computer Animation from the University of Cambridge in Liz Armstrong is the Director of the Technology Transfer and Training Unit at the Cooperative Research Centre for Distributed Systems Technology DSTC Pty Ltd in Brisbane Australia The Unit s activities are centred on the process of transferring technology from the DSTC to the Centre s participant organisations through education training special events and secondment programmes Liz holds a Bachelor of Commerce from Griffith University with majors in public policy marketing and video production and she is currently studying for a Masters of Commerce Information Systems at the University of Queensland 